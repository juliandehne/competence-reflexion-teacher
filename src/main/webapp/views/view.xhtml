<?xml version="1.0"?>

<f:view
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://primefaces.org/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets"
>
	<h:head />
	<h:body>
		<h:form id="learningTemplateForm">
		<p:outputPanel id="learningTemplatePorlet">
			<p:panel>
				<h:outputText
					value="Geben Sie einen Namen für das Template an oder wählen sie ein bestehendes aus!" />
				<br />
				<br />

				<h:outputText value="Learning-Template von DB auswählen: " />
				<br />
				<div class="flexiflex">
				<p:autoComplete maxResults="10" id="autocompleteLearningTemplate"
					dropdown="true" 
					value="#{learningTemplateView.selectedLearningTemplate}"
					completeMethod="#{learningTemplateView.complete}"
					validator="#{learningTemplateView.validate}"
					validatorMessage="Dieses Lernziel ist nicht vorhanden!"/>
				</div>
				<br />
				<p:commandButton value="auswählen" icon="ui-icon-check"
					ajax="true" validateClient="true"
					update="learningTemplatePorlet"
					actionListener="#{learningTemplateView.selectLearningTemplate}">
					<f:ajax render="@form" />
				</p:commandButton>
				<p:commandButton icon="ui-icon-plus" value="neu erstellen"
					onclick="PF('newTemplateDialog').show()" />
				
				<p:message for="autocompleteLearningTemplate" />

				<p:dialog header="neu Lernprojekt erstellen"  closeOnEscape="true"
					widgetVar="newTemplateDialog" modal="true" height="120">
					<h:outputText value="neu Learning-Template erstellen: " />
					<br /><br />
					<p:inputText id="name"
						value="#{learningTemplateView.newLearningTemplate}" />
					<br />
					<p:commandButton value="erstellen" icon="ui-icon-check"
						ajax="true" keypadOnly="true"
						update="learningProjectEdit"
						oncomplete="PF('newTemplateDialog').hide()"
						actionListener="#{learningTemplateView.createLearningTemplate}">
					</p:commandButton>
					<p:commandButton value="abbrechen" onclick="PF('newTemplateDialog').hide()"/>
				</p:dialog>
			</p:panel>


			<br />
			<br />
			<br />
			<p:panel id="learningProjectEdit">

				<h2>
					<h:outputText id="selectedLearningProject"
						value="Lernprojekte : #{templateCompetenceView.learnProject}" />
				</h2>
				
				<p:tree value="#{templateCompetenceView.root}" var="node" dynamic="true" orientation="horizontal">
			        <p:treeNode>
			            <h:outputText value="#{node}" />
			        </p:treeNode>
			    </p:tree>
			    
			    
				<ui:repeat var="catchWord" value="#{templateCompetenceView.catchWords}" >
					<h5><h:outputText value="Überschrift : #{catchWord} " /></h5>
<!-- 					<p:inplace id="ajax" editor="true"> -->
<!-- 			            <p:inputText value="#{catchWord} " required="true" label="text" /> -->
<!-- 			        </p:inplace> -->
			        
			        <ui:repeat var="competence" value="#{templateCompetenceView.competencen.get(catchWord)}" >
			        	<h:outputText value=" #{competence}"/>
			        	(<p:commandLink onclick="PF('branchCompetenceDialog').show()"
			        		actionListener="#{templateCompetenceView.selecteCompetence(competence)}">
					        <h:outputText value="Abzweigung" />
					    </p:commandLink>) -> 
			        </ui:repeat>
			        
			        <p:commandButton icon="ui-icon-plus" onclick="PF('newCompetenceDialog').show()"
			        	action="#{templateCompetenceView.selecteCatchWord(catchWord)}"/>
			        <br />
				</ui:repeat>
				
				<p:dialog header="Kompetence hinzufügen" widgetVar="newCompetenceDialog" 
					modal="true" height="100" closeOnEscape="true" >
				    <h:outputText value="Geben Sie eine Kompetenz ein! " />
				    <br />
					<p:inputText
						value="#{templateCompetenceView.newCompetence}" />
					<br />
					<p:commandButton value="erstellen" icon="ui-icon-check"
						update="learningProjectEdit"
						actionListener="#{templateCompetenceView.addNewCompetence}" />
						
					<p:commandButton value="abbrechen" onclick="PF('newCompetenceDialog').hide()"/>
				</p:dialog>
				
				<p:dialog header="Kompetence abzweigen" widgetVar="branchCompetenceDialog" 
					modal="true" height="100" closeOnEscape="true">
				    <h:outputText value="Wählen Sie eine Kompetenz aus! " />
				    <br />
				    <p:autoComplete maxResults="10"
						value="#{templateCompetenceView.selectedCompetenceToNode}"
						completeMethod="#{templateCompetenceView.complete}" />
				    <br />
					<p:commandButton value="abzweigen" icon="ui-icon-check"
						update="learningProjectEdit"
						actionListener="#{templateCompetenceView.branchCompetenceAction}" />
					<p:commandButton value="abbrechen" onclick="PF('branchCompetenceDialog').hide()"/>
				</p:dialog>
				
				<hr />
				<p:button icon="ui-icon-plus" value="Überschrift hinzufügen" onclick="return false">
					<p:effect type="fade" event="click" for="newHeadField">
						<f:param name="mode" value="'show'" />
					</p:effect>
				</p:button>

				<br />
				<h:panelGroup layout="block" id="newHeadField" style="display:none">
					<h:outputText value="Geben sie eine Überschrift ein!  " />
					<p:inputText
						value="#{templateCompetenceView.newCatchWord}" />
					<br />
<!-- 					<h:outputText -->
<!-- 						value="Geben Sie mind. ein Schlagwort ein (kommasepariert)!  " /> -->
<!-- 					<p:inputText -->
<!-- 						value="#{learningTemplateView.selectedLearningTemplate}" /> -->
<!-- 					<br /> -->
					<p:commandButton value="erstellen" icon="ui-icon-check"
						update="learningProjectEdit"
						actionListener="#{templateCompetenceView.addNewCatchWord}" />
					<p:button value="abbrechen" onclick="return false">
						<p:effect type="fade" event="click" for="newHeadField">
							<f:param name="mode" value="'hide'" />
						</p:effect>
					</p:button>
				</h:panelGroup>
				
				<hr />
				<ui:repeat var="competenceHeader" value="#{templateCompetenceView2.competenceHeaders}">
					<h6>
						<h:outputText value="Überschrift 1: " />
						<p:inplace id="ajax" editor="true">
				            <p:inputText value="#{competenceHeader}" required="true" label="text" />
				        </p:inplace>
					</h6>
					<ui:repeat var="descriptorType" value="#{templateCompetenceView2.descriptorTypes}" >
						<h:panelGroup layout="block" rendered="#{descriptorType.COMPETENCE eq competenceHeader}" >
							<h:outputText value="name: #{descriptorType.NAME}" /> <br />
							<h:outputText value="goal: #{descriptorType.GOAL}" /> <br />
							<h:outputText value="evaluations: #{descriptorType.EVALUATIONS}" /> <br />
							<h:outputText value="level: #{descriptorType.LEVEL}" /> <br />
							<h:outputText value="value: #{descriptorType.value}" /> <br />
							<h:outputText value="link: #{descriptorType.LINK}" /> <br />
						</h:panelGroup>
					</ui:repeat>
					<p:button icon="ui-icon-plus" value="Kompetencen hinzufügen"
						onclick="return false">
						<p:effect type="fade" event="click" for="competenceField">
							<f:param name="mode" value="'show'" />
						</p:effect>
					</p:button>
	
					<br />
					<h:panelGroup layout="block" id="competenceField" style="display:none">
						<h:outputText value="Geben Sie eine Beschreibung ein!  " />
						<p:inputText value="#{descriptorTypeView.newDescriptorType.NAME}" />
						<br />
						
						<h:outputText value="Geben Sie ein Level ein!  " />
						<p:inputText value="#{descriptorTypeView.newDescriptorType.LEVEL}" />
						<br />
						
						<h:outputText value="Geben Sie Evaluationen ein!  " />
						<p:inputText value="#{descriptorTypeView.newDescriptorType.EVALUATIONS}" />
						<br />
						
						<h:outputText value="Geben Sie Goal(0 oder 1) ein!  " />
						<p:inputText value="#{descriptorTypeView.newDescriptorType.GOAL}" />
						<br />
						
						<h:outputText value="Geben Sie Link ein!  " />
						<p:inputText value="#{descriptorTypeView.newDescriptorType.LINK}" />
						<br />
						<p:button value="abbrechen" onclick="return false">
							<p:effect type="fade" event="click" for="competenceField">
								<f:param name="mode" value="'hide'" />
							</p:effect>
						</p:button>
						<p:commandButton value="erstellen" icon="ui-icon-check"
							actionListener="#{descriptorTypeView.createDescriptorType}">
						</p:commandButton>
					</h:panelGroup>
					<hr />
				</ui:repeat>
				
			</p:panel>
		</p:outputPanel>
		</h:form>
	</h:body>
</f:view>
